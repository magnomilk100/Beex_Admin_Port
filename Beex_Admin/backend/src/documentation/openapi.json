{
	"openapi": "3.0.3",
	"info": {
		"title": "Application",
		"version": "0.0.1",
		"description": "To use the API you must first sign-in using the `POST /auth/sign-in` endpoint and collect the **Bearer token** from the response.\n"
	},
	"servers": [
		{
			"url": "/api"
		}
	],
	"paths": {
		"/auth/sign-up": {
			"post": {
				"tags": [
					"Authentication"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"email",
									"password"
								],
								"properties": {
									"email": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"invitationToken": {
										"type": "string",
										"description": "This invitation token is sent via email to the user. If they access it via the link, the invitation token is used to auto-accept the invitation to the specific tenant."
									},
									"tenantId": {
										"type": "string",
										"description": "If the user access the application via subdomain, it onboards the user on the tenant passed."
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Bearer token."
					},
					"400": {
						"description": "Email is already in use."
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/auth/sign-in": {
			"post": {
				"tags": [
					"Authentication"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"email",
									"password"
								],
								"properties": {
									"email": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"invitationToken": {
										"type": "string",
										"description": "This invitation token is sent via email to the user. If they access it via the link, the invitation token is used to auto-accept the invitation to the specific tenant."
									},
									"tenantId": {
										"type": "string",
										"description": "If the user access the application via subdomain, it onboards the user on the tenant passed."
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Bearer token."
					},
					"400": {
						"description": "Sorry, we don't recognize your credentials."
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/auth/me": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Authentication"
				],
				"responses": {
					"200": {
						"description": "Current User.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserCurrent"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/auth/change-password": {
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Authentication"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"oldPassword",
									"newPassword"
								],
								"properties": {
									"oldPassword": {
										"type": "string"
									},
									"newPassword": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Current User.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserCurrent"
								}
							}
						}
					},
					"400": {
						"description": "The old password is invalid."
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/auth/send-email-address-verification-email": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Authentication"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"tenantId": {
										"type": "string",
										"description": "If the user access the application via subdomain, the email will also be sent using the subdomain."
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/auth/send-password-reset-email": {
			"post": {
				"tags": [
					"Authentication"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"email"
								],
								"properties": {
									"email": {
										"type": "string"
									},
									"tenantId": {
										"type": "string",
										"description": "If the user access the application via subdomain, the email will also be sent using the subdomain."
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/auth/password-reset": {
			"put": {
				"tags": [
					"Authentication"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"token",
									"password"
								],
								"properties": {
									"token": {
										"type": "string",
										"description": "The token is the token the user receives via email when he/she asks to reset the password."
									},
									"password": {
										"type": "string",
										"format": "password",
										"description": "The new password."
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Password reset link is invalid or has expired."
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/auth/verify-email": {
			"put": {
				"tags": [
					"Authentication"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"token"
								],
								"properties": {
									"token": {
										"type": "string",
										"description": "The token is the token the user receives via email to verify his/her email."
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Email verification link is invalid or has expired."
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/auth/profile": {
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Authentication"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"type": "object",
										"properties": {
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"phoneNumber": {
												"type": "string"
											},
											"avatars": {
												"type": "array",
												"items": {
													"$ref": "#/components/schemas/FileInput"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/cliente/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Cliente"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Cliente"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Cliente"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ClienteInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Cliente"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/cliente": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Cliente"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[nome]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[email]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[cpf]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[telefone]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[cidade]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[pais]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Cliente"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Cliente"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ClienteInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Cliente"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Cliente"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/cliente/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Cliente"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/cliente/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Cliente"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ClienteInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Cliente"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pais/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pais"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pais"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pais"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PaisInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pais"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pais": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pais"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[nome]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Pais"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pais"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PaisInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pais"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pais"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pais/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pais"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pais/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pais"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PaisInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pais"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/corretora/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Corretora"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Corretora"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Corretora"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/CorretoraInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Corretora"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/corretora": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Corretora"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[nome]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Corretora"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Corretora"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/CorretoraInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Corretora"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Corretora"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/corretora/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Corretora"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/corretora/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Corretora"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/CorretoraInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Corretora"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/conta/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Conta"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Conta"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Conta"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ContaInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Conta"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/conta": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Conta"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[cliente]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[corretora]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[idMetatraderCorretora]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Conta"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Conta"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ContaInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Conta"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Conta"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/conta/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Conta"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/conta/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Conta"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ContaInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Conta"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plano/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Plano"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PlanoInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Plano"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plano": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[nome]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[qtdDeContratosRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "integer"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Plano"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PlanoInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Plano"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plano/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plano/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PlanoInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Plano"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/ordem/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Ordem"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ordem"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Ordem"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/OrdemInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ordem"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/ordem": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Ordem"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[conta]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[tipo]",
						"schema": {
							"type": "string",
							"enum": [
								"colocar",
								"retirar"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[direcao]",
						"schema": {
							"type": "string",
							"enum": [
								"compra",
								"venda"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[precoEntradaRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "number"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[robo]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[versao]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[dataHoraRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Ordem"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Ordem"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/OrdemInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ordem"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Ordem"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/ordem/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Ordem"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/ordem/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Ordem"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/OrdemInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ordem"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/robo/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Robô"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Robo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Robô"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/RoboInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Robo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/robo": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Robô"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[nome]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[ativo]",
						"schema": {
							"type": "string",
							"enum": [
								"dolar",
								"indice"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Robo"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Robô"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/RoboInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Robo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Robô"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/robo/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Robô"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/robo/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Robô"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/RoboInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Robo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pedido/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pedido"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pedido"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pedido"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PedidoInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pedido"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pedido/conta/idMetatraderCorretora/{idMetatraderCorretora}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pedido"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "idMetatraderCorretora",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pedido"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pedido/conta/idMetatraderCorretora/{idMetatraderCorretora}/robo/{roboId}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pedido"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "idMetatraderCorretora",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "roboId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pedido"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pedido": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pedido"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[cliente]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[robo]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[plano]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[indicadoPor]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[dataInicioRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[dataTerminoRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[dataEmailCobrancaRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[valorPagoRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "number"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[plataformaDePagamento]",
						"schema": {
							"type": "string",
							"enum": [
								"Kiwify",
								"PIX",
								"Transferencia",
								"Permuta",
								"Outro"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[duracaoPlano]",
						"schema": {
							"type": "string",
							"enum": [
								"mensal",
								"trimestral",
								"semestral",
								"anual"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Pedido"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pedido"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PedidoInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pedido"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pedido"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pedido/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pedido"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/pedido/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Pedido"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PedidoInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pedido"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/registro-diario/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Registro Diário"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RegistroDiario"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Registro Diário"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/RegistroDiarioInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RegistroDiario"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/registro-diario": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Registro Diário"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[cliente]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[robo]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[versao]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[numeroMagico]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[qtdContratosRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "integer"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[dataRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[numeroChart]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[conta]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/RegistroDiario"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Registro Diário"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/RegistroDiarioInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RegistroDiario"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Registro Diário"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/registro-diario/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Registro Diário"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/registro-diario/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Registro Diário"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/RegistroDiarioInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RegistroDiario"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/check-list/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Check List"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CheckList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Check List"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/CheckListInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CheckList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/check-list": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Check List"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[dataRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[cliente]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[aceiteDeRisco]",
						"schema": {
							"type": "string",
							"enum": [
								"pendente",
								"finalizado"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[emailBoasVindas]",
						"schema": {
							"type": "string",
							"enum": [
								"pendente",
								"finalizado"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[clienteRoundCube]",
						"schema": {
							"type": "string",
							"enum": [
								"pendente",
								"finalizado"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[suportePrimario]",
						"schema": {
							"type": "string",
							"enum": [
								"pendente",
								"finalizado"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[enviadoDe]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[processandoPor]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[observacao]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/CheckList"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Check List"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/CheckListInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CheckList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Check List"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/check-list/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Check List"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/check-list/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Check List"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/CheckListInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CheckList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plano-periodo/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano Periodo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlanoPeriodo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano Periodo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PlanoPeriodoInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlanoPeriodo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plano-periodo": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano Periodo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[plano]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[periodicidade]",
						"schema": {
							"type": "string",
							"enum": [
								"mensal",
								"trimestral",
								"semestral",
								"anual"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[valorRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "number"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/PlanoPeriodo"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano Periodo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PlanoPeriodoInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlanoPeriodo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano Periodo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plano-periodo/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano Periodo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plano-periodo/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plano Periodo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/PlanoPeriodoInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlanoPeriodo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/parametros-robo/{id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Parametros Robo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParametrosRobo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Parametros Robo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ParametrosRoboInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParametrosRobo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/parametros-robo/robo/{robo}/versao/{versao}/configuracao/{configuracao}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Parametros Robo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "robo",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "versao",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "configuracao",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParametrosRobo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Parametros Robo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ParametrosRoboInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParametrosRobo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/parametros-robo": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Parametros Robo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[dataRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						}
					},
					{
						"in": "query",
						"name": "filter[robo]",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "filter[versao]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[configuracao]",
						"schema": {
							"type": "string",
							"enum": [
								"A",
								"B",
								"C",
								"D",
								"E",
								"F",
								"G"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[observacao]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[parametros]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/ParametrosRobo"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Parametros Robo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ParametrosRoboInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParametrosRobo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Parametros Robo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/parametros-robo/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Parametros Robo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/parametros-robo/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Parametros Robo"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/ParametrosRoboInput"
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParametrosRobo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/audit-log": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Audit Logs"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[timestampRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "filter[action]",
						"schema": {
							"type": "string",
							"enum": [
								"create",
								"update",
								"delete"
							]
						}
					},
					{
						"in": "query",
						"name": "filter[entityId]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[createdByEmail]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[entityNames][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"example": "tenant"
							}
						}
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "timestamp_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/AuditLog"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/file/credentials": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"File"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filename",
						"schema": {
							"type": "string",
							"example": "file.txt"
						}
					},
					{
						"in": "query",
						"name": "storageId",
						"schema": {
							"type": "string",
							"example": "userAvatarsProfiles"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"downloadUrl": {
											"type": "string"
										},
										"uploadUrl": {
											"type": "string"
										},
										"uploadCredentials": {
											"type": "object",
											"description": "Credentials used on the FormData to post the to be uploaded file."
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/file/download": {
			"get": {
				"tags": [
					"File"
				],
				"parameters": [
					{
						"in": "query",
						"name": "privateUrl",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "File"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/file/upload": {
			"post": {
				"tags": [
					"File"
				],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/plan/stripe/webhook": {
			"post": {
				"description": "The webhook is used by Stripe only to notify the application when some event occurs.",
				"tags": [
					"Plan"
				],
				"parameters": [
					{
						"in": "header",
						"name": "stripe-signature",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "Stripe Payload"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"received": {
											"type": "boolean"
										}
									}
								}
							}
						}
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plan/stripe/portal": {
			"post": {
				"description": "Creates a URL for the user to use the Stripe Portal.",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plan"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"url": {
											"type": "string",
											"description": "Stripe Portal URL"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/plan/stripe/checkout": {
			"post": {
				"description": "Creates a session for the user to use the Stripe Checkout.",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Plan"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"plan": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"description": "Stripe Checkout Session ID"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/settings": {
			"get": {
				"tags": [
					"Settings"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Settings"
								}
							}
						}
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Settings"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"settings": {
										"$ref": "#/components/schemas/SettingsInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Settings"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{id}": {
			"get": {
				"tags": [
					"Tenant"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tenant"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Tenant"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/TenantInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tenant"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Tenant"
				],
				"parameters": [
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Tenant"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Tenant"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"$ref": "#/components/schemas/TenantInput"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tenant"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Tenant"
				],
				"parameters": [
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/url": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Tenant"
				],
				"parameters": [
					{
						"in": "query",
						"name": "url",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tenant"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/invitation/:token/accept": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Tenant"
				],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"forceAcceptOtherEmail": {
										"type": "boolean"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tenant"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/invitation/:token/decline": {
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"Tenant"
				],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/user/{id}": {
			"get": {
				"tags": [
					"User"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/user": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"User"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[id]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[fullName]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[email]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[role]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[status]",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filter[createdAtRange][]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "date-time"
							}
						},
						"explode": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"type": "number",
							"example": 0
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"schema": {
							"type": "string",
							"example": "createdAt_DESC"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rows": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/User"
											}
										},
										"count": {
											"type": "number"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"put": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"User"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"roles": {
												"type": "array",
												"items": {
													"type": "string",
													"example": "admin"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"User"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"data": {
										"type": "object",
										"properties": {
											"emails": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"roles": {
												"type": "array",
												"items": {
													"type": "string",
													"example": "admin"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			},
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"User"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ids[]",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"explode": true
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/user/autocomplete": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"User"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "number",
							"example": 10
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"label": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		},
		"/tenant/{tenantId}/user/import": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": [
					"User"
				],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"data",
									"importHash"
								],
								"properties": {
									"data": {
										"type": "object",
										"properties": {
											"email": {
												"type": "string"
											},
											"roles": {
												"type": "array",
												"items": {
													"type": "string",
													"example": "admin"
												}
											}
										}
									},
									"importHash": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"429": {
						"description": "Too Many Requests."
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		},
		"schemas": {
			"Cliente": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"telefone": {
						"type": "string"
					},
					"cidade": {
						"type": "string"
					},
					"pais": {
						"$ref": "#/components/schemas/Pais"
					},
					"observacoes": {
						"type": "string"
					}
				}
			},
			"ClienteInput": {
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"telefone": {
						"type": "string"
					},
					"cidade": {
						"type": "string"
					},
					"pais": {
						"type": "string",
						"format": "uuid"
					},
					"observacoes": {
						"type": "string"
					}
				}
			},
			"Pais": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					}
				}
			},
			"PaisInput": {
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					}
				}
			},
			"Corretora": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					}
				}
			},
			"CorretoraInput": {
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					}
				}
			},
			"Conta": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"cliente": {
						"$ref": "#/components/schemas/Cliente"
					},
					"corretora": {
						"$ref": "#/components/schemas/Corretora"
					},
					"idMetatraderCorretora": {
						"type": "string"
					}
				}
			},
			"ContaInput": {
				"type": "object",
				"properties": {
					"cliente": {
						"type": "string",
						"format": "uuid"
					},
					"corretora": {
						"type": "string",
						"format": "uuid"
					},
					"idMetatraderCorretora": {
						"type": "string"
					}
				}
			},
			"Plano": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					},
					"qtdDeContratos": {
						"type": "integer"
					}
				}
			},
			"PlanoInput": {
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					},
					"qtdDeContratos": {
						"type": "integer"
					}
				}
			},
			"Ordem": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"conta": {
						"$ref": "#/components/schemas/Conta"
					},
					"tipo": {
						"type": "string",
						"enum": [
							"colocar",
							"retirar"
						]
					},
					"direcao": {
						"type": "string",
						"enum": [
							"compra",
							"venda"
						]
					},
					"precoEntrada": {
						"type": "number"
					},
					"robo": {
						"$ref": "#/components/schemas/Robo"
					},
					"versao": {
						"type": "string"
					},
					"dataHora": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"OrdemInput": {
				"type": "object",
				"properties": {
					"conta": {
						"type": "string",
						"format": "uuid"
					},
					"tipo": {
						"type": "string",
						"enum": [
							"colocar",
							"retirar"
						]
					},
					"direcao": {
						"type": "string",
						"enum": [
							"compra",
							"venda"
						]
					},
					"precoEntrada": {
						"type": "number"
					},
					"robo": {
						"type": "string",
						"format": "uuid"
					},
					"versao": {
						"type": "string"
					},
					"dataHora": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"Robo": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					},
					"ativo": {
						"type": "string",
						"enum": [
							"dolar",
							"indice"
						]
					}
				}
			},
			"RoboInput": {
				"type": "object",
				"properties": {
					"nome": {
						"type": "string"
					},
					"ativo": {
						"type": "string",
						"enum": [
							"dolar",
							"indice"
						]
					}
				}
			},
			"Pedido": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"cliente": {
						"$ref": "#/components/schemas/Cliente"
					},
					"robo": {
						"$ref": "#/components/schemas/Robo"
					},
					"plano": {
						"$ref": "#/components/schemas/Plano"
					},
					"indicadoPor": {
						"$ref": "#/components/schemas/UserRelated"
					},
					"dataInicio": {
						"type": "string",
						"format": "date"
					},
					"dataTermino": {
						"type": "string",
						"format": "date"
					},
					"dataEmailCobranca": {
						"type": "string",
						"format": "date"
					},
					"valorPago": {
						"type": "number"
					},
					"plataformaDePagamento": {
						"type": "string",
						"enum": [
							"Kiwify",
							"PIX",
							"Transferencia",
							"Permuta",
							"Outro"
						]
					},
					"duracaoPlano": {
						"type": "string",
						"enum": [
							"mensal",
							"trimestral",
							"semestral",
							"anual"
						]
					}
				}
			},
			"PedidoInput": {
				"type": "object",
				"properties": {
					"cliente": {
						"type": "string",
						"format": "uuid"
					},
					"robo": {
						"type": "string",
						"format": "uuid"
					},
					"plano": {
						"type": "string",
						"format": "uuid"
					},
					"indicadoPor": {
						"type": "string",
						"format": "uuid"
					},
					"dataInicio": {
						"type": "string",
						"format": "date"
					},
					"dataTermino": {
						"type": "string",
						"format": "date"
					},
					"dataEmailCobranca": {
						"type": "string",
						"format": "date"
					},
					"valorPago": {
						"type": "number"
					},
					"plataformaDePagamento": {
						"type": "string",
						"enum": [
							"Kiwify",
							"PIX",
							"Transferencia",
							"Permuta",
							"Outro"
						]
					},
					"duracaoPlano": {
						"type": "string",
						"enum": [
							"mensal",
							"trimestral",
							"semestral",
							"anual"
						]
					}
				}
			},
			"RegistroDiario": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"cliente": {
						"$ref": "#/components/schemas/Cliente"
					},
					"robo": {
						"$ref": "#/components/schemas/Robo"
					},
					"versao": {
						"type": "string"
					},
					"numeroMagico": {
						"type": "string"
					},
					"qtdContratos": {
						"type": "integer"
					},
					"data": {
						"type": "string",
						"format": "date"
					},
					"numeroChart": {
						"type": "string"
					},
					"conta": {
						"$ref": "#/components/schemas/Conta"
					}
				}
			},
			"RegistroDiarioInput": {
				"type": "object",
				"properties": {
					"cliente": {
						"type": "string",
						"format": "uuid"
					},
					"robo": {
						"type": "string",
						"format": "uuid"
					},
					"versao": {
						"type": "string"
					},
					"numeroMagico": {
						"type": "string"
					},
					"qtdContratos": {
						"type": "integer"
					},
					"data": {
						"type": "string",
						"format": "date"
					},
					"numeroChart": {
						"type": "string"
					},
					"conta": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"CheckList": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"data": {
						"type": "string",
						"format": "date-time"
					},
					"cliente": {
						"$ref": "#/components/schemas/Cliente"
					},
					"aceiteDeRisco": {
						"type": "string",
						"enum": [
							"pendente",
							"finalizado"
						]
					},
					"emailBoasVindas": {
						"type": "string",
						"enum": [
							"pendente",
							"finalizado"
						]
					},
					"clienteRoundCube": {
						"type": "string",
						"enum": [
							"pendente",
							"finalizado"
						]
					},
					"suportePrimario": {
						"type": "string",
						"enum": [
							"pendente",
							"finalizado"
						]
					},
					"enviadoDe": {
						"$ref": "#/components/schemas/UserRelated"
					},
					"processandoPor": {
						"$ref": "#/components/schemas/UserRelated"
					},
					"observacao": {
						"type": "string"
					}
				}
			},
			"CheckListInput": {
				"type": "object",
				"properties": {
					"data": {
						"type": "string",
						"format": "date-time"
					},
					"cliente": {
						"type": "string",
						"format": "uuid"
					},
					"aceiteDeRisco": {
						"type": "string",
						"enum": [
							"pendente",
							"finalizado"
						]
					},
					"emailBoasVindas": {
						"type": "string",
						"enum": [
							"pendente",
							"finalizado"
						]
					},
					"clienteRoundCube": {
						"type": "string",
						"enum": [
							"pendente",
							"finalizado"
						]
					},
					"suportePrimario": {
						"type": "string",
						"enum": [
							"pendente",
							"finalizado"
						]
					},
					"enviadoDe": {
						"type": "string",
						"format": "uuid"
					},
					"processandoPor": {
						"type": "string",
						"format": "uuid"
					},
					"observacao": {
						"type": "string"
					}
				}
			},
			"PlanoPeriodo": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"plano": {
						"$ref": "#/components/schemas/Plano"
					},
					"periodicidade": {
						"type": "string",
						"enum": [
							"mensal",
							"trimestral",
							"semestral",
							"anual"
						]
					},
					"qrCode": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/File"
						}
					},
					"valor": {
						"type": "number"
					}
				}
			},
			"PlanoPeriodoInput": {
				"type": "object",
				"properties": {
					"plano": {
						"type": "string",
						"format": "uuid"
					},
					"periodicidade": {
						"type": "string",
						"enum": [
							"mensal",
							"trimestral",
							"semestral",
							"anual"
						]
					},
					"qrCode": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FileInput"
						}
					},
					"valor": {
						"type": "number"
					}
				}
			},
			"ParametrosRobo": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericEntity"
					}
				],
				"type": "object",
				"properties": {
					"data": {
						"type": "string",
						"format": "date-time"
					},
					"robo": {
						"$ref": "#/components/schemas/Robo"
					},
					"versao": {
						"type": "string"
					},
					"configuracao": {
						"type": "string",
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E",
							"F",
							"G"
						]
					},
					"observacao": {
						"type": "string"
					},
					"parametros": {
						"type": "string"
					}
				}
			},
			"ParametrosRoboInput": {
				"type": "object",
				"properties": {
					"data": {
						"type": "string",
						"format": "date-time"
					},
					"robo": {
						"type": "string",
						"format": "uuid"
					},
					"versao": {
						"type": "string"
					},
					"configuracao": {
						"type": "string",
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E",
							"F",
							"G"
						]
					},
					"observacao": {
						"type": "string"
					},
					"parametros": {
						"type": "string"
					}
				}
			},
			"AuditLog": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"entityName": {
						"type": "string"
					},
					"entityId": {
						"type": "string"
					},
					"tenant": {
						"type": "string"
					},
					"action": {
						"type": "string",
						"enum": [
							"create",
							"update",
							"delete"
						]
					},
					"createdBy": {
						"type": "string"
					},
					"createdByEmail": {
						"type": "string"
					},
					"timestamp": {
						"type": "string",
						"example": "2021-03-08T03:00:00.000Z"
					},
					"values": {
						"type": "object"
					}
				}
			},
			"UserCurrent": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericModel"
					}
				],
				"type": "object",
				"properties": {
					"fullName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"emailVerified": {
						"type": "boolean"
					},
					"emailVerificationTokenExpiresAt": {
						"type": "string",
						"format": "date-time"
					},
					"provider": {
						"type": "string"
					},
					"providerId": {
						"type": "string"
					},
					"passwordResetTokenExpiresAt": {
						"type": "string",
						"format": "date-time"
					},
					"lastName": {
						"type": "string"
					},
					"phoneNumber": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"jwtTokenInvalidBefore": {
						"type": "string"
					},
					"importHash": {
						"type": "string"
					},
					"tenants": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TenantUser"
						}
					},
					"avatars": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/File"
						}
					}
				}
			},
			"UserRelated": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericModel"
					}
				],
				"type": "object",
				"properties": {
					"fullName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"emailVerified": {
						"type": "boolean"
					},
					"emailVerificationTokenExpiresAt": {
						"type": "string",
						"format": "date-time"
					},
					"provider": {
						"type": "string"
					},
					"providerId": {
						"type": "string"
					},
					"passwordResetTokenExpiresAt": {
						"type": "string",
						"format": "date-time"
					},
					"lastName": {
						"type": "string"
					},
					"phoneNumber": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"jwtTokenInvalidBefore": {
						"type": "string",
						"format": "date-time"
					},
					"importHash": {
						"type": "string"
					},
					"avatars": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/File"
						}
					}
				}
			},
			"User": {
				"allOf": [
					{
						"$ref": "#/components/schemas/UserRelated"
					}
				],
				"type": "object",
				"properties": {
					"roles": {
						"type": "array",
						"items": {
							"type": "string",
							"example": "admin"
						}
					},
					"status": {
						"type": "string",
						"enum": [
							"active",
							"invited",
							"empty-permissions"
						]
					},
					"tenants": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TenantUser"
						}
					}
				}
			},
			"TenantUser": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericModel"
					}
				],
				"type": "object",
				"properties": {
					"user": {
						"type": "string",
						"format": "uuid"
					},
					"roles": {
						"type": "array",
						"items": {
							"type": "string",
							"example": "admin"
						}
					},
					"invitationToken": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"active",
							"invited",
							"empty-permissions"
						]
					},
					"tenant": {
						"$ref": "#/components/schemas/Tenant"
					}
				}
			},
			"Tenant": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericModel"
					}
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"plan": {
						"type": "string",
						"enum": [
							"free",
							"growth",
							"enterprise"
						]
					},
					"planStatus": {
						"type": "string",
						"enum": [
							"active",
							"cancel_at_period_end",
							"error"
						]
					},
					"planStripeCustomerId": {
						"type": "string"
					},
					"planUser": {
						"type": "string"
					},
					"settings": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Settings"
						}
					}
				}
			},
			"TenantInput": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				}
			},
			"Settings": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericModel"
					}
				],
				"type": "object",
				"properties": {
					"theme": {
						"type": "string"
					},
					"backgroundImageUrl": {
						"type": "string"
					},
					"logoUrl": {
						"type": "string"
					},
					"backgroundImages": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/File"
						}
					},
					"logos": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/File"
						}
					},
					"tenant": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"SettingsInput": {
				"type": "object",
				"properties": {
					"theme": {
						"type": "string"
					},
					"backgroundImages": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FileInput"
						}
					},
					"logos": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FileInput"
						}
					}
				}
			},
			"File": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericModel"
					}
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"sizeInBytes": {
						"type": "number"
					},
					"privateUrl": {
						"type": "string"
					},
					"publicUrl": {
						"type": "string"
					},
					"downloadUrl": {
						"type": "string"
					}
				}
			},
			"FileInput": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"sizeInBytes": {
						"type": "number"
					},
					"privateUrl": {
						"type": "string"
					},
					"publicUrl": {
						"type": "string"
					},
					"new": {
						"type": "boolean"
					}
				}
			},
			"GenericEntity": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GenericModel"
					}
				],
				"type": "object",
				"properties": {
					"importHash": {
						"type": "string"
					},
					"tenant": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"GenericModel": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					},
					"deletedAt": {
						"type": "string"
					},
					"createdBy": {
						"type": "string",
						"format": "uuid"
					},
					"updatedBy": {
						"type": "string",
						"format": "uuid"
					}
				}
			}
		}
	}
}